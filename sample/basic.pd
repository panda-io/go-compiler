namespace;

import libc;

//var a int;

/*
enum color
{
    red,
    green,
    blue
}*/

public class base_class
{
    public function create()
    {
        libc.puts("base construction");
    }

    public function destroy()
    {
        libc.puts("base destruction");
    }

    public function echo()
    {
        libc.puts("echo in base");
    }
}

public class derive_class : base_class
{
    public function create()
    {
        libc.puts("derive construction");
    }

    public function destroy()
    {
        libc.puts("derive destruction");
    }

    public function echo()
    {
        base.echo();
        libc.puts("echo in derive");
    }
}

public function main() int
{
    //var c counter;// = new counter();
    //new counter();

    //new base();

    var dc derive_class = new derive_class();
    echo(dc);

    var number int = 1;
    print_number(number);
    libc.printf("value #3: %d \n", number);

    return 0;
}

public function echo(dc derive_class)
{
    dc.echo();
}

public function print_number(ref value int)
{
    libc.printf("value #1: %d \n", value);
    //value = 2;
    libc.printf("value #2: %d \n", value);
}